<?php

namespace AppBundle\Controller;

use AppBundle\Entity\Annonce;

use AppBundle\Form\AnnonceType;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\HttpFoundation\File\File;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Serializer\Normalizer\ObjectNormalizer;
use Symfony\Component\Serializer\Serializer;

class AccouplementController extends Controller
{
    /**
     * @Route("/ajouterAccouplement" ,name="ajouter_membre")
     */
    public function AjoutAction(Request $request)
    {
        $user = $this->getUser();

        $accouplement = new Annonce();


        $form = $this->createFormBuilder($accouplement)
            ->add('type', ChoiceType::class, array(
                'choices'  => array(
                    'Chien' => 'Chien',
                    'Chat' => 'Chat',
                    'Rongeur' => 'Rongeur',
                    'Oiseau' => 'Oiseau',
                ),
            ))
            ->add('age', IntegerType::class)
            ->add('sex', ChoiceType::class, array(
                'choices' => array('Male' => 'Male', 'Female' => 'Female'),
                'expanded' => true,
            ))
            ->add('couleur', TextType::class)
            ->add('messageComplementaire', TextareaType::class)
            ->add('race', TextType::class)
            ->add('typepoil', ChoiceType::class, array(
                    'choices' => array(
                    'Nus' => 'Nus',
                    'Sans sous-poil' => 'Sans sous-poil',
                    'Double pelage' => 'Double pelage',
                    'Poils courts' => 'Poils courts',
                    'Poils longs' => 'Poils longs'),
            ))
            ->add('lieu_trouve', TextType::class)
            ->add('vaccin', ChoiceType::class, array(
                'choices' => array('Oui' => 'Oui', 'Non' => 'Non'),
                'expanded' => true,
            ))

            ->add('dossier', ChoiceType::class, array(
                'choices' => array('Oui' => 'Oui', 'Non' => 'Non'),
                'expanded' => true,
            ))
            ->add('images', FileType::class)
            ->add('save', SubmitType::class, array('label' => 'Poster'))

            ->getForm();
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {

            /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file1 */
            $file1 = $accouplement->getImages();
            $fileName1 = $this->generateUniqueFileName().'.'.$file1->guessExtension();
            $file1->move(
                $this->getParameter('accouplement_directory'),
                $fileName1
            );
            $accouplement->setImages($fileName1);
            $accouplement = $form->getData();
            $accouplement->setUtilisateur($user);
            $accouplement->setTypeAnnonce('annonce_accouplement');

            $accouplement->setDate(new \DateTime('now', (new \DateTimeZone('Africa/Tunis'))));

            $em = $this->getDoctrine()->getManager();
            $em->persist($accouplement);
            $em->flush();

            return $this->redirectToRoute('home_member');
        }
        return $this->render('AppBundle:Accouplement:ajout.html.twig', array(
            'form' => $form->createView(),
            'user' => $user,
        ));
    }


    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }



    /**
     * @Route("/Update/{id}",name="updateAccouplement_membre")
     */
    public function UpdateAction($id, Request $request)
    {
        $em=$this->getDoctrine()->getManager() ;
        $annonce=new Annonce();
        $annonce=$em->getRepository("AppBundle:Annonce")->find($id);
        $Form=$this->createForm(AnnonceType::class,$annonce);
        $Form->handleRequest($request);
        if($Form->isSubmitted())
        {
            $em->persist($annonce);
            $em->flush();
            return $this->redirectToRoute('afficher_accouplement',array('id'=>$id));
        }


        return $this->render('AppBundle:Accouplement:update.html.twig',
            array(

                'form1'=>$Form->createView()

        ));

    }

    /**
     * @Route("/Delete/{id}",name="deleteAccouplement_membre")
     */
    public function DeleteAction($id)
    {
        $em=$this->getDoctrine()->getManager() ;
        $annonce=new Annonce();
        $annonce=$em->getRepository("AppBundle:Annonce")->find($id);
        $em->remove($annonce);
        $em->flush();



        return $this->redirectToRoute('afficher_mes_annonce',array('id'=>$id));

    }

    /**
 * @Route("/afficheAccouplement" ,name="affiche_membre")
 */
    public function AfficheAction( Request $request )
    {
        $em=$this->getDoctrine()->getManager() ;
        $accouplement=$em->getRepository("AppBundle:Annonce")->findBytypeAnnonce("annonce_accouplement") ;
        $paginator  = $this->get('knp_paginator');
        $pag = $paginator->paginate(
            $accouplement,
            $request->query->getInt('page',1),
            $request->query->getInt('limit',4)

        );
        return $this->render('AppBundle:Accouplement:affiche.html.twig', array(
            "acc"=>$pag,
        ));
    }


    /**
     * @Route("/afficheAccouplement/{id}" ,name="affiche_un_membre")
     */
    public function AfficheUnAction($id)
    {
        $em=$this->getDoctrine()->getManager() ;
        $accouplement=$em->getRepository("AppBundle:Annonce")->find($id);
        return $this->render('AppBundle:Accouplement:afficheUn.html.twig', array(
            "accouplement"=>$accouplement,
        ));
    }



    ///////////////////////////////////
    /**
     * @Route("/listerMesAnnonce", name="afficher_accouplement")
     */
    public function AfficherMesAnnonceAccouploumentAction(Request $request)
    {

        $em = $this->getDoctrine()->getManager();
        $user = $this->getUser();
        $annonceaccouplement = $em->getRepository("AppBundle:Annonce")
            ->findBy(
                [
                    'utilisateur'=>$this->get('security.token_storage')->getToken()->getUser(),
                    'typeAnnonce'=>'annonce_accouplement'
                ]


            );


        /**
         * @var $paginator \Knp\Component\Pager\Paginator
         */

        $paginator = $this->get('knp_paginator');
        $annonceaccouplement = $paginator->paginate(
            $annonceaccouplement,
            $request->query->getInt('page', 1),
            $request->query->getInt('limit', 4)

        );

        return $this->render('AppBundle:Accouplement:afficher_mes_annonce.html.twig', array(
            'm' => $annonceaccouplement,
             'user' => $user
        ));
    }









    /**
     * @Route("/admin/ListerAnnonceAdmin" , name="accouplement_admin")
     */
    public function ListerAnnonceAdminAction(Request $request)
    {
        $em = $this->getDoctrine()->getManager();
        $user = $this->getUser();
        $annonce = $em->getRepository("AppBundle:Annonce")->findBy(['typeAnnonce' => 'annonce_accouplement']);


        /**
         * @var $paginator \Knp\Component\Pager\Paginator
         */

        $paginator = $this->get('knp_paginator');
        $annonce = $paginator->paginate(
            $annonce,
            $request->query->getInt('page', 1),
            $request->query->getInt('limit', 4)

        );


        return $this->render('AppBundle:Accouplement:gerer_admin.html.twig', array(
            'm' => $annonce,
            'user' => $user
        ));
    }



        /**
         * @Route("/admin/supprimerAnnonceT" ,name="supprimerAnnonceAcc_admin_accoup")
         */
        public function Delete1Action(Request $request)
      {
        $id_offre = $request->get("keyword");
        $em=$this->getDoctrine()->getManager();
        $offre=$em->getRepository("AppBundle:Annonce")->find($id_offre);


        $em->remove($offre);
        $em->flush();
        //return $this->redirectToRoute('annonce');

        }

    /**
     *@Route("/listerMesAnnonce2",name="affiche_api")
     */
    public function AfficheApiAction()
    {

        $em=$this->getDoctrine()->getManager()->getRepository("AppBundle:Annonce")->findBytypeAnnonce("annonce_accouplement") ;
        $serializer= new Serializer([new ObjectNormalizer()]);
        $formatted=$serializer->normalize($em);
        return new JsonResponse($formatted);
    }

    /**
     *@Route("/ajouterApi",name="ajout_api")
     */
    public function AjoutApiAction(Request $request)
    {

        $em=$this->getDoctrine()->getManager();
        $acc= new Annonce();
        $acc->setType($request->get('type'));
        $acc->setAge($request->get('age'));
        $acc->setSex($request->get('sex'));
        $acc->setCouleur($request->get('couleur'));
        $acc->setMessageComplementaire($request->get('messageComplementaire'));
        $acc->setRace($request->get('race'));
        $acc->setTypePoil($request->get('typePoil'));
        $acc->setLieuTrouve($request->get('lieu_trouve'));
        $acc->setVaccin($request->get('vaccin'));
        $acc->setDossier($request->get('dossier'));
        $acc->setTypeAnnonce('annonce_accouplement');
        $acc->setImages($request->get('images'));
        $em->persist($acc);
        $em->flush();

        $serializer= new Serializer([new ObjectNormalizer()]);
        $formatted=$serializer->normalize($acc);
        return new JsonResponse($formatted);
    }


    }





















